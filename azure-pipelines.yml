# azure-pipelines.yml
# CloudCart CI/CD Pipeline - Branch-based deployment

trigger:
  branches:
    include:
      - main
      - staging
      - develop

pr: none

pool:
  name: 'SandboxAgent'

variables:
  buildConfiguration: 'Release'
  artifactName: 'drop'

stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: BuildJob
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
              npm run build
            displayName: 'Build project'
            workingDirectory: '$(System.DefaultWorkingDirectory)'

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(artifactName).zip'
              replaceExistingArchive: true

          - publish: '$(Build.ArtifactStagingDirectory)'
            artifact: $(artifactName)

  - stage: Deploy_Staging
    displayName: 'Deploy to Staging'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeployStaging
        environment: 'Staging'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: $(artifactName)

                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: 'Your-Service-Connection'
                    appName: 'cloudcart-staging-webapp'
                    package: '$(Pipeline.Workspace)/$(artifactName)/*.zip'

  - stage: Deploy_Prod_Slot
    displayName: 'Deploy to Production Slot'
    dependsOn: Deploy_Staging
    condition: succeeded()
    jobs:
      - deployment: DeployProdSlot
        environment: 'Production-Slot'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: $(artifactName)

                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: 'Your-Service-Connection'
                    appName: 'cloudcart-prod-webapp'
                    deployToSlotOrASE: true
                    resourceGroupName: 'Your-Resource-Group'
                    slotName: 'slot'
                    package: '$(Pipeline.Workspace)/$(artifactName)/*.zip'

  - stage: Swap_Prod_Slot
    displayName: 'Swap Slot to Production'
    dependsOn: Deploy_Prod_Slot
    condition: succeeded()
    jobs:
      - deployment: SwapSlot
        environment: 'Production'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureAppServiceManage@0
                  inputs:
                    azureSubscription: 'Your-Service-Connection'
                    Action: 'Swap Slots'
                    WebAppName: 'cloudcart-prod-webapp'
                    ResourceGroupName: 'Your-Resource-Group'
                    SourceSlot: 'slot'
                    TargetSlot: 'production'
