# azure-pipelines.yml
# CloudCart CI/CD Pipeline - Branch-based Deployment (Dev → Staging → Prod Slot → Swap)

trigger:
  branches:
    include:
      - main
      - staging
      - develop

# Disable PR triggers
pr: none

pool:
  name: SandboxAgent

stages:
# ======================
# 1️⃣ Build Stage
# ======================
- stage: Build
  displayName: "Build Application"
  jobs:
    - job: BuildJob
      displayName: "Build and Publish Artifact"
      steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '18.x'
          displayName: "Install Node.js"

        - script: |
            npm install
            npm run build
          displayName: "Build Project"

        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: "$(System.DefaultWorkingDirectory)"
            includeRootFolder: false
            archiveType: zip
            archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
          displayName: "Archive build output"

        - publish: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
          artifact: drop
          displayName: "Publish build artifact"

# ======================
# 2️⃣ Deploy to Dev
# ======================
- stage: DeployDev
  displayName: "Deploy to Development"
  dependsOn: Build
  condition: succeeded()
  jobs:
    - deployment: DeployDevJob
      displayName: "Deploy to Azure Web App (Dev)"
      environment: "Development"
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadPipelineArtifact@2
                inputs:
                  artifact: drop
                  path: "$(Pipeline.Workspace)/drop"
                displayName: "Download artifact"

              - task: AzureWebApp@1
                displayName: "Deploy to Azure Web App (Dev)"
                inputs:
                  azureSubscription: "Azure-CloudCart-Connection"
                  appName: "cloudcart-dev-webapp"
                  package: "$(Pipeline.Workspace)/drop/**/*.zip"

# ======================
# 3️⃣ Deploy to Staging
# ======================
- stage: DeployStaging
  displayName: "Deploy to Staging"
  dependsOn: DeployDev
  condition: succeeded()
  jobs:
    - deployment: DeployStagingJob
      displayName: "Deploy to Azure Web App (Staging)"
      environment: "Staging"
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadPipelineArtifact@2
                inputs:
                  artifact: drop
                  path: "$(Pipeline.Workspace)/drop"
                displayName: "Download artifact"

              - task: AzureWebApp@1
                displayName: "Deploy to Azure Web App (Staging)"
                inputs:
                  azureSubscription: "Azure-CloudCart-Connection-stg"
                  appName: "cloudcart-stg-webapp"
                  package: "$(Pipeline.Workspace)/drop/**/*.zip"

# ======================
# 4️⃣ Deploy to Production Slot (with Manual Approval)
# ======================
- stage: DeployProd
  displayName: "Deploy to Production Slot"
  dependsOn: DeployStaging
  condition: succeeded()
  jobs:
    - deployment: DeployProdSlotJob
      displayName: "Deploy to Azure Web App Slot (Prod)"
      environment: "Production-Slot"   # ✅ exact name of your environment
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadPipelineArtifact@2
                inputs:
                  artifact: drop
                  path: "$(Pipeline.Workspace)/drop"
                displayName: "Download artifact"

              - task: AzureWebApp@1
                displayName: "Deploy to Azure Web App Slot (Prod)"
                inputs:
                  azureSubscription: "Azure-CloudCart-Connection-prod"
                  appName: "cloudcart-prod-webapp"
                  package: "$(Pipeline.Workspace)/drop/**/*.zip"
                  resourceGroupName: "rg-cloudcart-prod"
                  slotName: "slot"
