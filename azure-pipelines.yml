trigger:
  branches:
    include:
      - main
      - develop
      - staging

pool:
  name: 'SandboxAgent'   # ðŸ‘ˆ Global self-hosted agent declaration

variables:
  appName: 'cloudcart-webapp'
  devSlot: 'dev'
  stagingSlot: 'staging'
  prodSlot: 'production-slot'
  prodWebAppName: 'cloudcart-prod-webapp'
  artifactName: 'drop'

stages:
# -------------------------------
# DEV DEPLOYMENT
# -------------------------------
- stage: Dev
  displayName: "Deploy to Development"
  jobs:
  - job: DeployDev
    displayName: "Deploy to Dev Slot"
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: $(artifactName)
        path: $(Pipeline.Workspace)/$(artifactName)

    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'Azure-CloudCart-Connection'
        appType: 'webApp'
        appName: '$(appName)'
        package: '$(Pipeline.Workspace)/$(artifactName)/**/*.zip'
        slotName: '$(devSlot)'

# -------------------------------
# STAGING DEPLOYMENT
# -------------------------------
- stage: Staging
  displayName: "Deploy to Staging"
  dependsOn: Dev
  condition: succeeded()
  jobs:
  - job: DeployStaging
    displayName: "Deploy to Staging Slot"
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: $(artifactName)
        path: $(Pipeline.Workspace)/$(artifactName)

    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'Azure-CloudCart-Connection-stg'
        appType: 'webApp'
        appName: '$(appName)'
        package: '$(Pipeline.Workspace)/$(artifactName)/**/*.zip'
        slotName: '$(stagingSlot)'

# -------------------------------
# PRODUCTION SLOT DEPLOYMENT
# -------------------------------
- stage: ProductionSlot
  displayName: "Deploy to Production Slot"
  dependsOn: Staging
  condition: succeeded()
  jobs:
  - job: DeployProdSlot
    displayName: "Deploy to Production Slot"
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: $(artifactName)
        path: $(Pipeline.Workspace)/$(artifactName)

    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'Azure-CloudCart-Connection-prod'
        appType: 'webApp'
        appName: '$(prodWebAppName)'
        package: '$(Pipeline.Workspace)/$(artifactName)/**/*.zip'
        slotName: '$(prodSlot)'

# -------------------------------
# MANUAL APPROVAL AND SLOT SWAP
# -------------------------------
- stage: SwapToProduction
  displayName: "Manual Approval: Swap Slot to Production"
  dependsOn: ProductionSlot
  condition: succeeded()
  jobs:
  - deployment: Swap
    displayName: "Swap Slot to Production"
    environment: 'production'   # ðŸ‘ˆ Set up this environment in Azure DevOps for manual approval
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureAppServiceManage@0
            displayName: 'Swap Production Slot to Production'
            inputs:
              azureSubscription: 'Azure-CloudCart-Connection-prod'
              WebAppName: '$(prodWebAppName)'
              SourceSlot: '$(prodSlot)'
              ResourceGroupName: '<your-prod-resource-group>'
              Action: 'Swap Slots'
